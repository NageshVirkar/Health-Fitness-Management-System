{"ast":null,"code":"var _jsxFileName = \"D:\\\\GYM MANAGEMENT\\\\Health-fitness-Management-system\\\\Frontend\\\\FrontEnd\\\\src\\\\pages\\\\Signup\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as S from './style';\nimport './style.css';\nimport PasswordInput from '../../components/PassordInputLogin';\nimport NavBar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport { Link } from 'react-router-dom';\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useUserContext } from '../../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Index() {\n  _s();\n\n  document.title = 'Muscle Factory - Sign-up';\n  const navigate = useNavigate();\n  const {\n    saveUserData\n  } = useUserContext();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [healthRecords, setHealthRecords] = useState('');\n  const [termsAccepted, setTermsAccepted] = useState(true);\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    contactNumber: '',\n    address: '',\n    healthRecords: '',\n    termsAccepted: ''\n  });\n\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      contactNumber: '',\n      address: '',\n      healthRecords: '',\n      termsAccepted: ''\n    };\n\n    if (!firstName.trim()) {\n      newErrors.firstName = 'First Name is required';\n      isValid = false;\n    }\n\n    if (!lastName.trim()) {\n      newErrors.lastName = 'Last Name is required';\n      isValid = false;\n    }\n\n    if (!email.trim()) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      newErrors.email = 'Invalid email address';\n      isValid = false;\n    }\n\n    if (!password.trim()) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n\n    if (!contactNumber.trim()) {\n      newErrors.contactNumber = 'Contact Number is required';\n      isValid = false;\n    }\n\n    if (!address.trim()) {\n      newErrors.address = 'Address is required';\n      isValid = false;\n    }\n\n    if (!healthRecords.trim()) {\n      newErrors.healthRecords = 'Health Records are required';\n      isValid = false;\n    } // if (!termsAccepted) {\n    //   newErrors.termsAccepted = 'You must accept the terms';\n    //   isValid = false;\n    // }\n\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const userData = {\n        firstName,\n        lastName,\n        email,\n        password,\n        contactNumber,\n        address,\n        healthRecords,\n        termsAccepted\n      };\n      saveUserData(userData); // Register user API call\n\n      axios.post(\"http://localhost:8083/mail/send/\" + email).then(response => {\n        console.log('Registration successful. Response:', response.data); // Log the generated OTP\n\n        console.log('Generated OTP:', response.data.generatedOtp); // Set the generated OTP to state\n\n        setGeneratedOtp(response.data.generatedOtp); // Registration successful\n        // Redirect to OTP verification page\n\n        navigate('/otpverify', {\n          state: {\n            generatedOtp: response.data.generatedOtp\n          }\n        });\n      }).catch(error => {\n        console.error(\"Error registering user:\", error);\n\n        if (error.response) {\n          // The request was made and the server responded with a status code\n          // that falls out of the range of 2xx\n          console.log('Error response status:', error.response.status);\n          console.log('Error response data:', error.response.data);\n          alert(`Error registering user: ${error.response.data.message}`);\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log('No response received');\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error message:', error.message);\n          alert(`Error registering user: ${error.message}`);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(S.All, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Container, {\n      children: [/*#__PURE__*/_jsxDEV(S.Signup, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: \"REGISTER YOURSELF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          id: \"standard-basic-1\",\n          classes: {\n            root: 'inputSignup'\n          },\n          required: true,\n          fullWidth: true,\n          label: \"First Name\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: firstName,\n          onChange: e => setFirstName(e.target.value),\n          helperText: errors.firstName,\n          error: Boolean(errors.firstName),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"standard-basic-2\",\n          required: true,\n          margin: \"dense\",\n          fullWidth: true,\n          label: \"Last Name\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: lastName,\n          onChange: e => setLastName(e.target.value),\n          helperText: errors.lastName,\n          error: Boolean(errors.lastName),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {\n                className: \"Svg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"outlined-basic-3\",\n          required: true,\n          type: \"email\",\n          margin: \"dense\",\n          fullWidth: true,\n          label: \"Email\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          helperText: errors.email,\n          error: Boolean(errors.email),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          },\n          autoComplete: \"email\" // or autoComplete=\"off\" based on your requirement\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"outlined-adornment-password\",\n          required: true,\n          fullWidth: true,\n          label: \"Password\",\n          color: \"error\",\n          variant: \"outlined\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          helperText: errors.password,\n          error: Boolean(errors.password),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          },\n          autoComplete: \"current-password\" // Add this line\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"outlined-basic-4\",\n          required: true,\n          fullWidth: true,\n          label: \"Contact Number\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: contactNumber,\n          onChange: e => setContactNumber(e.target.value),\n          helperText: errors.contactNumber,\n          error: Boolean(errors.contactNumber),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"outlined-basic-5\",\n          required: true,\n          fullWidth: true,\n          label: \"Address\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          helperText: errors.address,\n          error: Boolean(errors.address),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          classes: {\n            root: 'inputSignup'\n          },\n          id: \"outlined-basic-6\",\n          required: true,\n          fullWidth: true,\n          label: \"Health Records\",\n          color: \"error\",\n          variant: \"outlined\",\n          value: healthRecords,\n          onChange: e => setHealthRecords(e.target.value),\n          helperText: errors.healthRecords,\n          error: Boolean(errors.healthRecords),\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(LocalHospitalIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this),\n            style: {\n              color: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          classes: {\n            root: 'inputSignup'\n          },\n          color: \"error\",\n          required: true,\n          id: \"check\",\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: termsAccepted,\n            onChange: () => setTermsAccepted(!termsAccepted)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 22\n          }, this),\n          label: `I have read and accept the terms of use`,\n          error: Boolean(errors.termsAccepted).toString() // Convert boolean to string\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.ButtonEntrar, {\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ButtonSignin, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"b5Q/ePkcPpv5R5CFoZxPfvHbTfE=\", false, function () {\n  return [useNavigate, useUserContext];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","useState","S","PasswordInput","NavBar","Footer","Link","TextField","AccountCircle","InputAdornment","FormControlLabel","Checkbox","LocalHospitalIcon","useNavigate","axios","useUserContext","Index","document","title","navigate","saveUserData","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","contactNumber","setContactNumber","address","setAddress","healthRecords","setHealthRecords","termsAccepted","setTermsAccepted","generatedOtp","setGeneratedOtp","errors","setErrors","validateForm","isValid","newErrors","trim","test","length","handleRegister","e","preventDefault","userData","post","then","response","console","log","data","state","catch","error","status","alert","message","request","root","target","value","Boolean","startAdornment","style","color","toString"],"sources":["D:/GYM MANAGEMENT/Health-fitness-Management-system/Frontend/FrontEnd/src/pages/Signup/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as S from './style';\nimport './style.css';\nimport PasswordInput from '../../components/PassordInputLogin';\nimport NavBar from '../../components/Navbar';\nimport Footer from '../../components/Footer';\nimport { Link } from 'react-router-dom';\n\nimport TextField from '@mui/material/TextField';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { useUserContext } from '../../UserContext';\n\nexport default function Index() {\n  document.title = 'Muscle Factory - Sign-up';\n  const navigate = useNavigate();\n  const { saveUserData } = useUserContext();\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [address, setAddress] = useState('');\n  const [healthRecords, setHealthRecords] = useState('');\n  const [termsAccepted, setTermsAccepted] = useState(true);\n  const [generatedOtp, setGeneratedOtp] = useState('');\n\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    contactNumber: '',\n    address: '',\n    healthRecords: '',\n    termsAccepted: '',\n  });\n\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      contactNumber: '',\n      address: '',\n      healthRecords: '',\n      termsAccepted: '',\n    };\n\n    if (!firstName.trim()) {\n      newErrors.firstName = 'First Name is required';\n      isValid = false;\n    }\n\n    if (!lastName.trim()) {\n      newErrors.lastName = 'Last Name is required';\n      isValid = false;\n    }\n\n    if (!email.trim()) {\n      newErrors.email = 'Email is required';\n      isValid = false;\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      newErrors.email = 'Invalid email address';\n      isValid = false;\n    }\n\n    if (!password.trim()) {\n      newErrors.password = 'Password is required';\n      isValid = false;\n    } else if (password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n      isValid = false;\n    }\n\n    if (!contactNumber.trim()) {\n      newErrors.contactNumber = 'Contact Number is required';\n      isValid = false;\n    }\n\n    if (!address.trim()) {\n      newErrors.address = 'Address is required';\n      isValid = false;\n    }\n\n    if (!healthRecords.trim()) {\n      newErrors.healthRecords = 'Health Records are required';\n      isValid = false;\n    }\n\n    // if (!termsAccepted) {\n    //   newErrors.termsAccepted = 'You must accept the terms';\n    //   isValid = false;\n    // }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const userData = {\n        firstName,\n        lastName,\n        email,\n        password,\n        contactNumber,\n        address,\n        healthRecords,\n        termsAccepted,\n      };\n\n      saveUserData(userData);\n\n      // Register user API call\n      axios.post(\"http://localhost:8083/mail/send/\" + email)\n        .then((response) => {\n          console.log('Registration successful. Response:', response.data);\n\n          // Log the generated OTP\n          console.log('Generated OTP:', response.data.generatedOtp);\n\n          // Set the generated OTP to state\n          setGeneratedOtp(response.data.generatedOtp);\n\n          // Registration successful\n          // Redirect to OTP verification page\n          navigate('/otpverify', {\n            state: { generatedOtp: response.data.generatedOtp },\n          });\n        })\n        .catch((error) => {\n          console.error(\"Error registering user:\", error);\n\n          if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log('Error response status:', error.response.status);\n            console.log('Error response data:', error.response.data);\n            alert(`Error registering user: ${error.response.data.message}`);\n          } else if (error.request) {\n            // The request was made but no response was received\n            console.log('No response received');\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error message:', error.message);\n            alert(`Error registering user: ${error.message}`);\n          }\n        });\n    }\n  };\n\n  return (\n    <S.All>\n      <NavBar />\n      <S.Container>\n        <S.Signup>\n          <h1>\n            <center>REGISTER YOURSELF</center>\n          </h1>\n          <TextField\n            margin=\"dense\"\n            id=\"standard-basic-1\"\n            classes={{ root: 'inputSignup' }}\n            required\n            fullWidth\n            label=\"First Name\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n            helperText={errors.firstName}\n            error={Boolean(errors.firstName)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n          />\n          <TextField\n            classes={{ root: 'inputSignup' }}\n            id=\"standard-basic-2\"\n            required\n            margin=\"dense\"\n            fullWidth\n            label=\"Last Name\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n            helperText={errors.lastName}\n            error={Boolean(errors.lastName)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle className=\"Svg\" />\n                </InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n          />\n          <TextField\n            classes={{ root: 'inputSignup' }}\n            id=\"outlined-basic-3\"\n            required\n            type=\"email\"\n            margin=\"dense\"\n            fullWidth\n            label=\"Email\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            helperText={errors.email}\n            error={Boolean(errors.email)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircle />\n                </InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n            autoComplete=\"email\" // or autoComplete=\"off\" based on your requirement\n          />\n          <TextField\n            margin=\"dense\"\n            classes={{ root: 'inputSignup' }}\n            id=\"outlined-adornment-password\"\n            required\n            fullWidth\n            label=\"Password\"\n            color=\"error\"\n            variant=\"outlined\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            helperText={errors.password}\n            error={Boolean(errors.password)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {/* You can add an icon for the password if needed */}\n                </InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n            autoComplete=\"current-password\" // Add this line\n          />\n          <TextField\n            margin=\"dense\"\n            classes={{ root: 'inputSignup' }}\n            id=\"outlined-basic-4\"\n            required\n            fullWidth\n            label=\"Contact Number\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={contactNumber}\n            onChange={(e) => setContactNumber(e.target.value)}\n            helperText={errors.contactNumber}\n            error={Boolean(errors.contactNumber)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">{/* You can add an icon for the contact number if needed */}</InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            classes={{ root: 'inputSignup' }}\n            id=\"outlined-basic-5\"\n            required\n            fullWidth\n            label=\"Address\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            helperText={errors.address}\n            error={Boolean(errors.address)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">{/* You can add an icon for the address if needed */}</InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n          />\n          <TextField\n            margin=\"dense\"\n            classes={{ root: 'inputSignup' }}\n            id=\"outlined-basic-6\"\n            required\n            fullWidth\n            label=\"Health Records\"\n            color=\"error\"\n            variant=\"outlined\"\n            value={healthRecords}\n            onChange={(e) => setHealthRecords(e.target.value)}\n            helperText={errors.healthRecords}\n            error={Boolean(errors.healthRecords)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <LocalHospitalIcon />\n                </InputAdornment>\n              ),\n              style: { color: 'white' },\n            }}\n          />\n          <FormControlLabel\n            classes={{ root: 'inputSignup' }}\n            color=\"error\"\n            required\n            id=\"check\"\n            control={<Checkbox checked={termsAccepted} onChange={() => setTermsAccepted(!termsAccepted)} />}\n            label={`I have read and accept the terms of use`}\n            error={Boolean(errors.termsAccepted).toString()} // Convert boolean to string\n          />\n          <S.ButtonEntrar onClick={handleRegister}>Register</S.ButtonEntrar>\n        </S.Signup>\n        <S.ButtonSignin>\n          <Link to=\"/login\">Login</Link>\n        </S.ButtonSignin>\n      </S.Container>\n      <Footer />\n    </S.All>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}